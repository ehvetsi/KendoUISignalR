@using Kendo.Mvc

<link href="~/Content/kendo/2015.3.1111/kendo.common-bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2015.3.1111/kendo.default.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo/2015.3.1111/jquery.min.js"></script>
<script src="~/Scripts/kendo/2015.3.1111/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/2015.3.1111/kendo.aspnetmvc.min.js"></script>
@*<script src="~/Scripts/kendo/2015.3.1111/kendo.data.signalr.min.js"></script>*@

<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<script src="@Url.Content("~/signalr/hubs")"></script>

<script>
    var hub = $.connection.productHub;
    var hubStart = $.connection.hub.start();
</script>

@*@(Html.Kendo().Notification()
          .Name("notification")
          .Width("100%")
          .Position(position => position.Top(0).Left(0))
    )*@
<br />
<p>RabbitMQ deverá estar instalado e rodando na porta padrão, usuário e senha padrão: guest</p>
<p>Execute uma nova instância de RabbitMQMassTransitSubscriber para ativar o serviço que monitora o Rabbit</p>
<br />

@(Html.Kendo().Grid<KendoUISignalR.CrossCutting.Dto.ProductViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(product => product.ProductID);
          columns.Bound(product => product.ProductName);
          columns.Bound(product => product.UnitsInStock);
      })
  .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
    .SignalR()
    .AutoSync(true)
        .PageSize(10)
        .Transport(tr => tr
            .Promise("hubStart")
            .Hub("hub")
            .Client(c => c
                .Read("read")
                .Update("update"))
            .Server(s => s
                .Read("read")
                .Update("update")))
        .Schema(schema => schema
            .Model(model =>
            {
                model.Id(m => m.ProductID);
                model.Field(m => m.ProductID).Editable(false);
            })
                       )
    )
)

<div class="form-group">
    <input type="text" id="productId" placeholder="Product Id" />
    <input type="text" id="userName" placeholder="User Name" />
    <button class="btn-sm btn-primary" id="btnUpdate">Atualizar</button>
</div>

<script>
    $(function () {
        $(document).on("click", "#btnUpdate", function () {
            $.ajax({
                url: '@Url.Action("StartUpdateProducts")',
                data: { productId: $("#productId").val(), userName: $("#userName").val()},
                dataType: "json",
                method:"post"
            });
        });
    });
</script>